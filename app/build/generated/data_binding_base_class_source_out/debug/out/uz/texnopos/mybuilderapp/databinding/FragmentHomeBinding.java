// Generated by view binder compiler. Do not edit!
package uz.texnopos.mybuilderapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uz.texnopos.mybuilderapp.R;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText etSearch;

  @NonNull
  public final MaterialCardView filter;

  @NonNull
  public final TextInputLayout inputSearch;

  @NonNull
  public final RecyclerView rvProfession;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText etSearch, @NonNull MaterialCardView filter,
      @NonNull TextInputLayout inputSearch, @NonNull RecyclerView rvProfession) {
    this.rootView = rootView;
    this.etSearch = etSearch;
    this.filter = filter;
    this.inputSearch = inputSearch;
    this.rvProfession = rvProfession;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etSearch;
      TextInputEditText etSearch = rootView.findViewById(id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.filter;
      MaterialCardView filter = rootView.findViewById(id);
      if (filter == null) {
        break missingId;
      }

      id = R.id.inputSearch;
      TextInputLayout inputSearch = rootView.findViewById(id);
      if (inputSearch == null) {
        break missingId;
      }

      id = R.id.rvProfession;
      RecyclerView rvProfession = rootView.findViewById(id);
      if (rvProfession == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, etSearch, filter, inputSearch,
          rvProfession);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
