// Generated by view binder compiler. Do not edit!
package uz.texnopos.mybuilderapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.chaos.view.PinView;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uz.texnopos.mybuilderapp.R;

public final class ActivityVerifyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final PinView idOtp;

  @NonNull
  public final TextView phone;

  @NonNull
  public final TextView text;

  @NonNull
  public final MaterialButton verifyBtn;

  private ActivityVerifyBinding(@NonNull ConstraintLayout rootView, @NonNull PinView idOtp,
      @NonNull TextView phone, @NonNull TextView text, @NonNull MaterialButton verifyBtn) {
    this.rootView = rootView;
    this.idOtp = idOtp;
    this.phone = phone;
    this.text = text;
    this.verifyBtn = verifyBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVerifyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVerifyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_verify, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVerifyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.id_otp;
      PinView idOtp = rootView.findViewById(id);
      if (idOtp == null) {
        break missingId;
      }

      id = R.id.phone;
      TextView phone = rootView.findViewById(id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = rootView.findViewById(id);
      if (text == null) {
        break missingId;
      }

      id = R.id.verifyBtn;
      MaterialButton verifyBtn = rootView.findViewById(id);
      if (verifyBtn == null) {
        break missingId;
      }

      return new ActivityVerifyBinding((ConstraintLayout) rootView, idOtp, phone, text, verifyBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
